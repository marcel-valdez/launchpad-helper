#!/usr/bin/env bash

function script_file_name() {
  echo "$(basename "$(test -L "$0" && readlink "$0" || echo "$0")")"
}

function usage() {
  read -d '' __USAGE <<'_EOF_'
  is a tool that given an app name and ppa url\\n
  it will fetch the latest package binary (.deb) and install it on the system.\\n
\\n
  update-package <package-name> [ppa-url]\\n
  package-name: the name of the package to fetch\\n
  ppa-url: PPA url of the archive where the package is stored\\n
\\n
  Example:\\n
    update-package solaar ppa:daniel.pavel.solaar\\n
_EOF_

  echo >&2 -e " $(script_file_name)" $__USAGE
}

function cleanup() {
  if [ -e $__binary_file ]; then
    shred -u $__binary_file
  fi
}

if [ "$1" == "" ]; then
  usage
  exit 1
else
  __app_name="$1"
fi

__ppa_url="$2"
__binary_url=$(python ./__latest_version.py "$__app_name" "$__ppa_url" --get_url)
__binary_file="/tmp/${__app_name}-latest.deb"

trap cleanup EXIT
wget -O "$__binary_file" "$__binary_url"
if [ -e $__binary_file ]; then
  sudo dpkg -i $__binary_file
else
  exit 1
fi